# Kocsen Chung
# Project Euler
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#Note: 33th fib number is last # to be < 4million
def fib(n)
	#if n > 4000000
	#	return puts n
	#end
	return n if (0..1).include? n
	fib(n-1) + fib(n-2) if n > 1
end

def main()
	result = 0
	0.upto(40) { |x| 
		val = fib(x)
		puts val.to_s
		if val < 4000000 and val % 2 == 0
			result += val
		end
	}
	puts "Result: " + result.to_s
end
main()
